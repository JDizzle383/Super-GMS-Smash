Converting GML script: ${project_dir}\scripts\track_object_type\track_object_type.gml
Converted builtin - line 18: view_xview[argument0] -> __view_get( e__VW.XView, argument0 )
Converted builtin - line 18: view_xview[argument0] -> __view_get( e__VW.XView, argument0 )
Converted builtin - line 5: view_xview[argument0]=0 -> __view_set( e__VW.XView, argument0, 0 )
Converted builtin - line 10: view_xview[argument0]+=x -> __view_set( e__VW.XView, argument0, __view_get( e__VW.XView, argument0 ) + (x) )
Converted builtin - line 14: view_xview[argument0]/=instance_number(argument1 -> __view_set( e__VW.XView, argument0, __view_get( e__VW.XView, argument0 ) / (instance_number(argument1) )
Converted builtin - line 34: view_xview[argument0]-=(view_wview[argument0]/2) -> __view_set( e__VW.XView, argument0, __view_get( e__VW.XView, argument0 ) - ((view_wview[argument0]/2)) )
Converted builtin - line 19: view_yview[argument0] -> __view_get( e__VW.YView, argument0 )
Converted builtin - line 19: view_yview[argument0] -> __view_get( e__VW.YView, argument0 )
Converted builtin - line 6: view_yview[argument0]=0 -> __view_set( e__VW.YView, argument0, 0 )
Converted builtin - line 11: view_yview[argument0]+=y -> __view_set( e__VW.YView, argument0, __view_get( e__VW.YView, argument0 ) + (y) )
Converted builtin - line 15: view_yview[argument0]/=instance_number(argument1 -> __view_set( e__VW.YView, argument0, __view_get( e__VW.YView, argument0 ) / (instance_number(argument1) )
Converted builtin - line 35: view_yview[argument0]-=(view_hview[argument0]/2) -> __view_set( e__VW.YView, argument0, __view_get( e__VW.YView, argument0 ) - ((view_hview[argument0]/2)) )
Converted builtin - line 31: view_wview[argument0]=VSize*(view_wport[argument0]/view_hport[argument0]) -> __view_set( e__VW.WView, argument0, VSize*(view_wport[argument0]/view_hport[argument0]) )
Converted builtin - line 32: view_hview[argument0]=VSize -> __view_set( e__VW.HView, argument0, VSize )
Converted builtin - line 29: view_wport[argument0] -> __view_get( e__VW.WPort, argument0 )
Converted builtin - line 29: view_hport[argument0] -> __view_get( e__VW.HPort, argument0 )
Converted description /// @description track_object_type(viewid,object,minsize)/// @param viewid
/// @param object
/// @param minsize
Converted builtin - line 37: view_wview[argument0] -> __view_get( e__VW.WView, argument0 )
Converted builtin - line 38: view_hview[argument0] -> __view_get( e__VW.HView, argument0 )
Converted builtin - line 34: view_wport[argument0] -> __view_get( e__VW.WPort, argument0 )
Converted builtin - line 34: view_hport[argument0] -> __view_get( e__VW.HPort, argument0 )

Added compatibility script 'view/__view_get.gml'
Added compatibility script 'view/__view_set.gml'
Added compatibility script 'view/__view_set_internal.gml'
Added compatibility script 'view/__init_view.gml'
Added compatibility script '__init_global.gml'